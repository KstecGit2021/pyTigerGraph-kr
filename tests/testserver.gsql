SET exit_on_error = FALSE
DROP ALL

CREATE GRAPH tests()

BEGIN
TYPEDEF TUPLE <
    f01_int        INT
  , f02_int1       INT(1)
  , f03_int2       INT(2)
  , f04_int4       INT(4)
  , f05_int8       INT(8)
  , f06_uint       UINT
  , f07_uint1      UINT(1)
  , f08_uint2      UINT(2)
  , f09_uint4      UINT(4)
  , f10_uint8      UINT(8)
  , f11_float      FLOAT
  , f12_double     DOUBLE
  , f13_datetime   DATETIME
  , f14_bool       BOOL
  , f15_string30   STRING(30)
> tuple1_all_types
END

BEGIN
TYPEDEF TUPLE <
    field1         INT
  , field2         STRING(10)
  , field3         DATETIME
> tuple2_simple
END

BEGIN
CREATE SCHEMA_CHANGE JOB setup {

    ADD VERTEX vertex1_all_types (
        PRIMARY_ID id                        STRING
      , a01_int                              INT
      , a02_uint                             UINT
      , a03_float                            FLOAT
      , a04_double                           DOUBLE
      , a05_datetime                         DATETIME
      , a06_bool                             BOOL
      , a07_string                           STRING
   // , a08_string_compress                  STRING COMPRESS
      , a09_fixed_binary100                  FIXED_BINARY(100)
      , a10_udt                              tuple2_simple

      , a11_list_int                         LIST<INT>
   // , a12_list_uint                        LIST<UINT>
   // , a13_list_float                       LIST<FLOAT>
      , a14_list_double                      LIST<DOUBLE>
      , a15_list_datetime                    LIST<DATETIME>
      , a16_list_string                      LIST<STRING>
   // , a17_list_string_compress             LIST<STRING COMPRESS>
      , a18_list_udt                         LIST<tuple2_simple>

      , a19_set_int                          SET<INT>
   // , a20_set_uint                         SET<UINT>
   // , a21_set_float                        SET<FLOAT>
      , a22_set_double                       SET<DOUBLE>
      , a23_set_datetime                     SET<DATETIME>
      , a24_set_string                       SET<STRING>
   // , a25_set_string_compress              SET<STRING COMPRESS>
      , a26_set_udt                          SET<tuple2_simple>

      , a27_int_int                          MAP<INT, INT>
      , a28_int_double                       MAP<INT, DOUBLE>
      , a29_int_string                       MAP<INT, STRING>
   // , a30_int_string_compress              MAP<INT, STRING COMPRESS>
      , a31_int_datetime                     MAP<INT, DATETIME>
      , a32_int_udt                          MAP<INT, tuple2_simple>
      , a33_datetime_int                     MAP<DATETIME, INT>
      , a34_datetime_double                  MAP<DATETIME, DOUBLE>
      , a35_datetime_string                  MAP<DATETIME, STRING>
   // , a36_datetime_string_compress         MAP<DATETIME, STRING COMPRESS>
      , a37_datetime_datetime                MAP<DATETIME, DATETIME>
      , a38_datetime_udt                     MAP<DATETIME, tuple2_simple>
      , a39_string_int                       MAP<STRING, INT>
      , a40_string_double                    MAP<STRING, DOUBLE>
      , a41_string_string                    MAP<STRING, STRING>
   // , a42_string_string_compress           MAP<STRING, STRING COMPRESS>
      , a43_string_datetime                  MAP<STRING, DATETIME>
      , a44_string_udt                       MAP<STRING, tuple2_simple>
   // , a45_string_compress_int              MAP<STRING COMPRESS, INT>
   // , a46_string_compress_double           MAP<STRING COMPRESS, DOUBLE>
   // , a47_string_compress_string           MAP<STRING COMPRESS, STRING>
   // , a48_string_compress_string_compress  MAP<STRING COMPRESS, STRING COMPRESS>
   // , a49_string_compress_datetime         MAP<STRING COMPRESS, DATETIME>
   // , a50_string_compress_udt              MAP<STRING COMPRESS, tuple2_simple>
    );


    ADD VERTEX vertex2_primary_key (
        id     INT PRIMARY KEY
      , a01    STRING
      , a02    DATETIME
    );


    ADD VERTEX vertex3_primary_key_composite (
        a01    INT 
      , a02    STRING
      , a03    DATETIME
      , a04    BOOL
      , PRIMARY KEY (a01, a02, a03)
    );

    ADD VERTEX vertex4 (
        PRIMARY_ID id  INT
      , a01            INT
    );

    ADD VERTEX vertex5 (
        PRIMARY_ID id  INT
    );

    ADD VERTEX vertex6 (
        PRIMARY_ID id  INT
    );

    ADD VERTEX vertex7 (
        PRIMARY_ID id  INT
    );

    ADD UNDIRECTED EDGE edge1_undirected (
        FROM vertex4
      , TO   vertex5
      , a01  INT
    );

    ADD DIRECTED EDGE edge2_directed (
        FROM vertex4
      , TO   vertex5
      , a01  INT
    );

    ADD DIRECTED EDGE edge3_directed_with_reverse (
        FROM vertex4
      , TO   vertex5
      , a01  INT
    )
    WITH REVERSE_EDGE="edge3_directed_with_reverse_reverse_edge";

    ADD DIRECTED EDGE edge4_many_to_many (
        FROM vertex4, TO vertex5
      | FROM vertex4, TO vertex6
      | FROM vertex4, TO vertex7
      | FROM vertex5, TO vertex6
      | FROM vertex6, TO vertex7
    );

    ADD DIRECTED EDGE edge5_all_to_all (
        FROM *
      , TO *
    );
}
END

RUN SCHEMA_CHANGE JOB setup

BEGIN
CREATE SCHEMA_CHANGE JOB setup2 {

    ADD DIRECTED EDGE edge6_loop (
        FROM vertex4
      , TO   vertex4
      , a01  INT
    );

}
END

RUN SCHEMA_CHANGE JOB setup2

UPSERT vertex4 VALUES(1, 1)
UPSERT vertex4 VALUES(2, 2)
UPSERT vertex4 VALUES(3, 3)
UPSERT vertex4 VALUES(4, 4)
UPSERT vertex4 VALUES(5, 5)

UPSERT vertex5 VALUES(1)
UPSERT vertex5 VALUES(2)
UPSERT vertex5 VALUES(3)
UPSERT vertex5 VALUES(4)
UPSERT vertex5 VALUES(5)

UPSERT vertex6 VALUES(1)
UPSERT vertex6 VALUES(2)
UPSERT vertex6 VALUES(3)
UPSERT vertex6 VALUES(4)
UPSERT vertex6 VALUES(5)

UPSERT vertex7 VALUES(1)
UPSERT vertex7 VALUES(2)
UPSERT vertex7 VALUES(3)
UPSERT vertex7 VALUES(4)
UPSERT vertex7 VALUES(5)

UPSERT vertex4 -(edge1_undirected)->            vertex5 VALUES (1, 1, 1)
UPSERT vertex4 -(edge1_undirected)->            vertex5 VALUES (1, 2, 2)
UPSERT vertex4 -(edge1_undirected)->            vertex5 VALUES (1, 3, 2)
UPSERT vertex4 -(edge1_undirected)->            vertex5 VALUES (2, 2, 2)
UPSERT vertex4 -(edge1_undirected)->            vertex5 VALUES (2, 4, 2)
UPSERT vertex4 -(edge1_undirected)->            vertex5 VALUES (3, 1, 2)
UPSERT vertex4 -(edge1_undirected)->            vertex5 VALUES (3, 3, 2)
UPSERT vertex4 -(edge1_undirected)->            vertex5 VALUES (3, 5, 2)

UPSERT vertex4 -(edge2_directed)->              vertex5 VALUES (2, 1, 2)
UPSERT vertex4 -(edge3_directed_with_reverse)-> vertex5 VALUES (3, 1, 3)

UPSERT vertex4 -(edge4_many_to_many)->          vertex5 VALUES (1, 1)
UPSERT vertex4 -(edge4_many_to_many)->          vertex5 VALUES (1, 2)
UPSERT vertex4 -(edge4_many_to_many)->          vertex5 VALUES (1, 3)
UPSERT vertex4 -(edge4_many_to_many)->          vertex6 VALUES (2, 2)
UPSERT vertex4 -(edge4_many_to_many)->          vertex6 VALUES (2, 4)
UPSERT vertex4 -(edge4_many_to_many)->          vertex7 VALUES (3, 1)
UPSERT vertex4 -(edge4_many_to_many)->          vertex7 VALUES (3, 3)
UPSERT vertex4 -(edge4_many_to_many)->          vertex7 VALUES (3, 5)

BEGIN
CREATE QUERY query1() {
  SumAccum<INT> @@summa;
  start = {vertex4.*};
  res =
    SELECT src
    FROM   start:src
    ACCUM  @@summa += src.a01;
  PRINT @@summa AS ret;
}
END

INSTALL QUERY query1

BEGIN
CREATE QUERY query2_not_installed() {
  PRINT "This query is not installed";
}
END

BEGIN
CREATE QUERY query3_installed() {
  PRINT "This query is installed";
}
END

INSTALL QUERY query3_installed

BEGIN
CREATE QUERY query4_all_param_types(
    INT                   p01_int
  , UINT                  p02_uint
  , FLOAT                 p03_float
  , DOUBLE                p04_double
  , STRING                p05_string
  , BOOL                  p06_bool
  , VERTEX                p07_vertex
  , VERTEX<vertex4>       p08_vertex_vertex4
  , DATETIME              p09_datetime
  , SET<INT>              p10_set_int
  , BAG<INT>              p11_bag_int
//, FILE                  p12_file
  , SET<VERTEX>           p13_set_vertex
  , SET<VERTEX<vertex4>>  p14_set_vertex_vertex4
) {

  PRINT p01_int;
  PRINT p02_uint;
  PRINT p03_float;
  PRINT p04_double;
  PRINT p05_string;
  PRINT p06_bool;
  PRINT p07_vertex;
  PRINT p08_vertex_vertex4;
  PRINT p09_datetime;
  PRINT p10_set_int;
  PRINT p11_bag_int;
//PRINT p12_file;
  PRINT p13_set_vertex;
  PRINT p14_set_vertex_vertex4;
}
END

INSTALL QUERY query4_all_param_types

CREATE SECRET secret1
CREATE SECRET secret2
CREATE SECRET secret3

// EOF
